<?xml version="1.0" encoding="ISO-8859-15" standalone="no"?><uc-export clientvers="8.0.0">
<JOBS_UNIX AttrType="UNIX" name="PCK.AUTOMIC_SHARED.PRV.JOB.VALIDATE_TARGET_FILE@UNIX">
<XHEADER state="1">
<Title>Validate target file</Title>


<LastUsed/>
<ArchiveKey1/>
<ArchiveKey2/>
<ExtRepDef>1</ExtRepDef>
<ExtRepAll>0</ExtRepAll>
<ExtRepNone>0</ExtRepNone>
<Active>1</Active>
<OH_SubType/>
</XHEADER>
<OUTPUTREG state="1" tidy="1">
<FileReg/>
</OUTPUTREG>
<SYNCREF state="1">
<Syncs/>
</SYNCREF>
<ATTR_JOBS state="1">
<Queue>CLIENT_QUEUE</Queue>
<StartType/>
<HostDst>UNIX|&lt;UNIX&gt;|HOST</HostDst>
<HostATTR_Type>UNIX</HostATTR_Type>
<CodeName/>
<Login/>
<IntAccount/>
<AutoDeactNo>0</AutoDeactNo>
<AutoDeact1ErrorFree>0</AutoDeact1ErrorFree>
<AutoDeactErrorFree>0</AutoDeactErrorFree>
<DeactWhen/>
<DeactDelay>0</DeactDelay>
<AutoDeactAlways>1</AutoDeactAlways>
<AttDialog>0</AttDialog>
<ActAtRun>1</ActAtRun>
<Consumption>0</Consumption>
<UC4Priority>0</UC4Priority>
<MaxParallel2>0</MaxParallel2>
<MpElse1>1</MpElse1>
<MpElse2>0</MpElse2>
<TZ/>
</ATTR_JOBS>
<ATTR_UNIX state="1">
<OutputDb>1</OutputDb>
<OutputDbErr>0</OutputDbErr>
<OutputFile>0</OutputFile>
<ShellScript>1</ShellScript>
<Command>0</Command>
<Priority>0</Priority>
<Shell/>
<ShellOptions/>
<Com/>
</ATTR_UNIX>
<RUNTIME state="1">
<MaxRetCode>0</MaxRetCode>
<MrcExecute/>
<MrcElseE>0</MrcElseE>
<FcstStatus>0| </FcstStatus>
<Ert>2</Ert>
<ErtMethodDef>1</ErtMethodDef>
<ErtMethodFix>0</ErtMethodFix>
<ErtFix>0</ErtFix>
<ErtDynMethod>2|Average</ErtDynMethod>
<ErtMethodDyn>0</ErtMethodDyn>
<ErtCnt>0</ErtCnt>
<ErtCorr>0</ErtCorr>
<ErtIgn>0</ErtIgn>
<ErtIgnFlg>0</ErtIgnFlg>
<ErtMinCnt>0</ErtMinCnt>
<MrtMethodNone>1</MrtMethodNone>
<MrtMethodFix>0</MrtMethodFix>
<MrtFix>0</MrtFix>
<MrtMethodErt>0</MrtMethodErt>
<MrtErt>0</MrtErt>
<MrtMethodDate>0</MrtMethodDate>
<MrtDays>0</MrtDays>
<MrtTime>00:00</MrtTime>
<MrtTZ/>
<SrtMethodNone>1</SrtMethodNone>
<SrtMethodFix>0</SrtMethodFix>
<SrtFix>0</SrtFix>
<SrtMethodErt>0</SrtMethodErt>
<SrtErt>0</SrtErt>
<MrtCancel>0</MrtCancel>
<MrtExecute>0</MrtExecute>
<MrtExecuteObj/>
</RUNTIME>
<DYNVALUES state="1">
<dyntree>
<node content="1" id="VALUE" name="Variables" parent="" type="VALUE">
<VALUE state="1">
<Values/>
<Mode>0</Mode>
</VALUE>
</node>
</dyntree>
</DYNVALUES>
<ROLLBACK state="1" tidy="1">
<RollbackFlag>0</RollbackFlag>
<CBackupObj/>
<CRollbackObj/>
<FBackupPath/>
<FDeleteBefore>0</FDeleteBefore>
<FInclSubDirs>0</FInclSubDirs>
</ROLLBACK>
<PRE_SCRIPT mode="1" replacementmode="1" state="1" tidy="0">
<PSCRI><![CDATA[:IF &UC4RB_TARGET_AGENT# <> ''
:  SET &AGENT# = &UC4RB_TARGET_AGENT#
:ELSE
:  STOP MSG, 50, "WORKFLOW: Target Agent must be preconfigured!"
:ENDIF

:IF &UC4RB_TARGET_LOGIN# <> ''
:  SET &LOGIN# = &UC4RB_TARGET_LOGIN#
:ELSE
:  STOP MSG, 50, "WORKFLOW: Target Login Object must be preconfigured!"
:ENDIF

!  get the agent OS type
:PSET &UC4RB_AGENT_OS# = GET_VAR('UC_HOST_JCL_VAR', &AGENT#)
:PRINT "WORKFLOW: &AGENT# agent runs on &UC4RB_AGENT_OS#"


:SET &UC_WIN_TYP = GET_SCRIPT_VAR("UC_WIN_TYP")
:PRINT "WIN_TYP: &UC_WIN_TYP"

:SET &JOB_TYPE# = "INVALID - JOB Object Type"
:IF &UC_WIN_TYP = "BAT" OR "KDO" OR "EXTCOMPROC"
:  SET &JOB_TYPE# = "WINDOWS"
:ELSE
:  SET &UC_UNIX_TYPE = GET_ATT("UNIX_TYPE")
:  PRINT "UNIX_TYPE: &UC_UNIX_TYPE"
:  IF &UC_UNIX_TYPE = "SHELL_SCRIPT" OR "COMMAND"
:    SET &JOB_TYPE# = "UNIX"
:  ENDIF
:ENDIF

:IF &JOB_TYPE# = &UC4RB_AGENT_OS#
:  PRINT "HEADER: check OS successfully - runbook (&JOB_TYPE#) runs on &UC4RB_AGENT_OS#"
:  PUT_ATT HOST = &AGENT#
:ELSE
:  STOP NOMSG, 50, "HEADER: stop &JOB_TYPE# runbook because it's a &UC4RB_AGENT_OS# agent"
:ENDIF


:SET &LOGIN# = GET_SCRIPT_VAR("LOGIN#")

:IF &LOGIN# <> ""
:  PRINT "JOB: setting login to &LOGIN#"
:ELSE
:  SET &LOGIN# = GET_ATT(LOGIN)
:  PRINT "JOB: login is preconfigured to &LOGIN#"
:ENDIF

:PUT_ATT LOGIN = &LOGIN#]]></PSCRI>
</PRE_SCRIPT>
<SCRIPT mode="1" state="1" tidy="0">
<MSCRI><![CDATA[:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_HEADER_PARAM_VALIDATION
:DEFINE &STRING_ARR#,string,30
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.NORMALIZE_PATH "UC4RB_CONVERTED_STRING" = "UC4RB_TARGET_FILE"

:SET &UC4RB_LOGGING_INFO# = "Checking target parameter..."
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_INFO
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.SUDOERS_HEADER
errors=0

:SET &UC4RB_PARENT_DIR# = &UC4RB_TARGET_FILE#
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.GET_DIRECTORY_FROM_FILE_NAME "UC4RB_CONVERTED_STRING" = "UC4RB_PARENT_DIR"
echo "Ensure directory &UC4RB_PARENT_DIR# can be created in agent host &AGENT#"
cd "&UC4RB_PARENT_DIR#"
RC=$?
if [ "$RC" -gt "0" ] ;
  then
    mkdir -p "&UC4RB_PARENT_DIR#"
fi
RC=$?
if [ "$RC" -gt "0" ] ;
  then
:  SET &UC4RB_LOGGING_PARAMETER# = "Target File"
:  SET &UC4RB_LOGGING_ERROR# = "Target file &UC4RB_TARGET_FILE# is invalid"
:  INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_ERROR_PARAMETER
   exit $RC;
fi

!Check if target file exists
:SET &UC4RB_CHECKME# = "&UC4RB_TARGET_FILE#"
:INCLUDE PCK.AUTOMIC_SHARED.PUB.INCLUDE.CHECK_UNIX_SHELL_FILE_EXISTS

:IF &UC4RB_OVERWRITE_TARGET# = "No"
if [ $EXIST -eq 1 ]
then
:   SET &UC4RB_LOGGING_PARAMETER# = "Target File"
:   SET &UC4RB_LOGGING_ERROR# = "Target file &UC4RB_CHECKME# already existed and Overwrite Target parameter is 'No'"
:   INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_ERROR_PARAMETER
    errors=1
fi
:ENDIF

if [ $errors -ne 0 ]
then
  exit $errors
fi




chmod -R 777 "&UC4RB_PARENT_DIR#"
:SET &UC4RB_LOGGING_INFO# = "Target parameter is valid"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.LOGGING_INFO
:PUBLISH &UC4RB_TARGET_FILE#,,"WORKFLOW"
:INC PCK.AUTOMIC_SHARED.PUB.INCLUDE.SUDOERS_FOOTER
]]></MSCRI>
</SCRIPT>
<OUTPUTSCAN state="1">
<Inherit>N</Inherit>
<filterobjects/>
<HostFsc/>
<LoginFsc/>
</OUTPUTSCAN>
<POST_SCRIPT mode="1" replacementmode="1" state="1" tidy="1">
<OSCRI/>
</POST_SCRIPT>
<DOCU_Docu state="1" type="text">
<DOC/>
</DOCU_Docu>
</JOBS_UNIX>
</uc-export>